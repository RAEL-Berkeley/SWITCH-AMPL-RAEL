AMPL provides two mechanisms for issuing shell calls to the operating system: 
  * the shell command which prints output to the screen and does not allow it to be passed directly into an AMPL variable.
  * a pipe function
A pipe function starts a shell process on the first invocation. 
Function parameters are passed to the shell command as one line of STDIN. 
One line of the command's output on STDOUT is returned to AMPL. 
Subsequent calls to the function will print another line to its STDIN and retrieve another line from its STDOUT.
An upshot of this is that a function based around a one-use command like `hostname` will work the first time and subsequently fail since the command has finished executing and closed its input pipe. e.g.
		ampl: function get_hostname symbolic pipe "hostname";
		ampl: display get_hostname();
		get_hostname() = switch-workstn2.banatao.berkeley.edu
		ampl: display get_hostname();
		Error executing "display" command:
			error writing to pipe function get_hostname
		
There are two ways around this one-use behavior. The first is to reset the function after calling it. This closes the pipe and so that the next call to the function will start the process anew. You can reset every defined function with the command `reset function;` or reset a single function with `reset data get_hostname;`
		ampl: function get_hostname symbolic pipe "hostname";
		ampl: display get_hostname();
		get_hostname() = switch-workstn2.banatao.berkeley.edu
		ampl: reset data get_hostname;
		ampl: display get_hostname();
		get_hostname() = switch-workstn2.banatao.berkeley.edu
		
The second work-around is to put the command you actually care about in a loop that waits for a line of input and runs the command when a new line comes in. This makes the function definition in AMPL a little harder to read, but simplifies the usage of the function. Note that the variable read by the while loop (foo) is ignored. 	

		ampl: function get_hostname symbolic pipe "while read foo; do hostname; done;";
		ampl: display get_hostname();
		get_hostname() = switch-workstn2.banatao.berkeley.edu
		ampl: display get_hostname();
		get_hostname() = switch-workstn2.banatao.berkeley.edu

