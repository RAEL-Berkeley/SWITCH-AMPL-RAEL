trap "ampl_lic stop;" EXIT INT TERM

echo $(date) >>logs/recompile.log
echo $(date) >>logs/recompile.err

job_path=$(mktemp -p tmp ampl_recompile-XXX);
prob_num=0
for d in $(ls -1d test_set_*); do
  worker=$(( $prob_num % $NUM_WORKERS ));
  echo "\
    echo \"\$(date)\" >>logs/recompile-${worker}.log; \
    echo \"\$(date)\" >>logs/recompile-${worker}.err; \
    echo \"\
      cd $d; \
      include dispatch_problem.run; \
      for {c in CARBON_COSTS} { \
        let carbon_cost := c; \
        include dispatch_load_grid.run; \
        include dispatch_recompile.run; \
      } \
    \" | ampl 1>>logs/recompile-${worker}.log 2>>logs/recompile-${worker}.err;"
  prob_num=$(($prob_num+1))
done > $job_path

for ((worker=0; worker<$NUM_WORKERS; worker++)); do
  echo "echo 'this worker finished last job at '\$(date); ampl_lic return ampl; ampl_lic stop;" >> $job_path
done

echo "recompile job_path is $job_path"

# This will need to be tweaked to work with different clusters; hopper uses aprun or something like that.
mpirun -v -np $NUM_WORKERS ./execute_jobs.pl $job_path;

# rm $job_path
