###############################
# Load the investment decisions
let curtime := time();
shell( "for f in InstallGen OperateEPDuringPeriod InstallTrans; do ln -sf ${f}" & carbon_cost & ".tab inputs/$f.tab; done" );
read table TableInstallGen;
read table TableOperateEPDuringPeriod;
read table TableInstallTrans;
close;
shell( "for f in InstallGen OperateEPDuringPeriod InstallTrans; do p=inputs/$f.tab; if [ -L $p ]; then rm $p; fi; done" );
for {(pid, a, t, p) in PROJECT_VINTAGES} {
  let InstallGen[pid, a, t, p] := max(InstallGen_Init[pid, a, t, p], 0);
}
for {(a1, a2, p) in TRANSMISSION_LINE_NEW_PERIODS} {
  let InstallTrans[a1, a2, p] := InstallTrans_Init[a1, a2, p];
}
for {(pid, a, t, p) in EP_PERIODS_ALL} {
  let OperateEPDuringPeriod[pid, a, t, p] := OperateEPDuringPeriod_Init[pid, a, t, p];
}
printf "%d seconds to load investment decisions from disk for carbon cost %d.\n", (time() - curtime), carbon_cost;
